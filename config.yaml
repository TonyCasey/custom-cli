# Development Environment Services Configuration
# This file defines all services, their dependencies, and composite environments
#
# Key Features:
# - Dependency-driven startup order (services wait for dependencies to be healthy)
# - Variable substitution with ${VAR} syntax
# - Comments to document service relationships
# - Clean, readable YAML structure

# Individual service definitions
services:
  # Firebase Emulator Suite - No dependencies, starts first
  firebase-emulators:
    port: 4000
    directory: ${REPOS_DIR}/firestore-functions/functions
    command: npm run fb-run-local
    timeout: 45
    healthUrl: ""  # Uses port-based health check
    displayName: Firebase Emulators
    dependencies: []
    # Provides: Firestore (8080), Auth (9099), Database (9000), Storage (9199), UI (4000)

  # Dashboard API - Depends on Firebase being healthy
  dashboard-api:
    port: 1337
    directory: ${REPOS_DIR}/dashboard-api
    command: npm run start-dev
    timeout: 30
    healthUrl: http://localhost:1337/elb-health-check
    displayName: Dashboard API
    dependencies:
      - firebase-emulators  # Waits for Firebase to be fully ready

  # Dashboard Web App - Depends on both Firebase and API
  dashboard-webapp:
    port: 3000
    directory: ${REPOS_DIR}/dashboard
    command: npm start
    timeout: 60
    healthUrl: http://localhost:3000
    displayName: Dashboard Web App
    dependencies:
      - firebase-emulators  # Needs Firebase for backend
      - dashboard-api       # Needs API to be healthy first

  # Main API (for app environment) - Depends on Firebase
  api:
    port: 1337  # Note: Conflicts with dashboard-api (different environments)
    directory: ${REPOS_DIR}/api
    command: npm run start-dev
    timeout: 30
    healthUrl: http://localhost:1337/elb-health-check
    displayName: API Server
    dependencies:
      - firebase-emulators

  # Metro Bundler for React Native - No dependencies
  metro:
    port: 8081
    directory: ${REPOS_DIR}/app
    command: npx react-native start --reset-cache
    timeout: 30
    healthUrl: ""  # Uses port-based health check
    displayName: Metro Bundler
    dependencies: []

  # React Native App - Depends on Firebase and API
  react-native:
    port: ""  # No specific port (mobile app)
    directory: ${REPOS_DIR}/app
    command: ""  # Complex startup handled by legacy system
    timeout: 60
    healthUrl: ""
    displayName: React Native App
    dependencies:
      - firebase-emulators
      - api
      - metro

# Composite service environments
composites:
  # Complete dashboard development environment
  dashboard:
    services:
      - firebase-emulators
      - dashboard-api
      - dashboard-webapp
    displayName: Complete Dashboard Environment
    description: Firebase emulators + Dashboard API + Dashboard Web App
    # Services start in dependency order: Firebase ‚Üí API ‚Üí Web App

  # Complete app development environment
  app:
    services:
      - firebase-emulators
      - api
      - metro
      - react-native
    displayName: Complete React Native App Environment
    description: Firebase emulators + API + Metro bundler + React Native app
    # Services start in dependency order: Firebase ‚Üí API, Metro ‚Üí React Native

# Global configuration
global:
  # Directory paths
  reposDir: ${HOME}/Repos
  logsDir: ${REPOS_DIR}/custom-cli/.logs

  # CLI configuration
  cliName: custom-cli
  cliExecutable: bin/custom-cli

  # Default timeouts
  timeoutDefault: 30
  timeoutLong: 45
  timeoutDashboard: 60

  # Version information
  version: 1.0.0
  versionName: Custom CLI Framework
  buildDate: 2025-09-24
  phase: "Release 1.0: Generic CLI Framework"
  architecture: Configuration-Driven

# Process cleanup patterns (for stopping services)
processPatterns:
  firebase: firebase.*emulators
  dashboardApi: dashboard-api
  dashboardWebapp: dashboard.*webpack-dev-server react-scripts.*start
  api: api.*nodemon api.*ts-node
  metro: react-native start metro.*start react-native.*run-android
  reactNative: node.*app-run npm.*app-run app-setup.js

# UI configuration
ui:
  colors:
    green: '\033[0;32m'
    yellow: '\033[1;33m'
    red: '\033[0;31m'
    blue: '\033[0;34m'
    purple: '\033[0;35m'
    reset: '\033[0m'

  icons:
    firebase: üî•
    api: üîå
    webapp: üåê
    mobile: üì±
    success: ‚úÖ
    warning: ‚ö†Ô∏è
    error: ‚ùå
    info: ‚Ñπ

# Firebase sub-services (for detailed status checking)
firebaseServices:
  ui:
    port: 4000
    displayName: Emulator UI
  firestore:
    port: 8080
    displayName: Firestore Emulator
  auth:
    port: 9099
    displayName: Firebase Auth Emulator
  database:
    port: 9000
    displayName: Firebase Database Emulator
  storage:
    port: 9199
    displayName: Firebase Storage Emulator